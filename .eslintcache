[{"/home/harry/sei/projects/trainslator-1/src/index.js":"1","/home/harry/sei/projects/trainslator-1/src/App.js":"2","/home/harry/sei/projects/trainslator-1/src/TextBox.js":"3","/home/harry/sei/projects/trainslator-1/src/SpeechToText.js":"4","/home/harry/sei/projects/trainslator-1/src/MessageHistory.js":"5","/home/harry/sei/projects/trainslator-1/src/TextToText.js":"6","/home/harry/sei/projects/trainslator-1/src/token_util.js":"7"},{"size":196,"mtime":1644363030010,"results":"8","hashOfConfig":"9"},{"size":1375,"mtime":1644397797370,"results":"10","hashOfConfig":"9"},{"size":1038,"mtime":1644398394570,"results":"11","hashOfConfig":"9"},{"size":1948,"mtime":1644397849280,"results":"12","hashOfConfig":"9"},{"size":943,"mtime":1644397047170,"results":"13","hashOfConfig":"9"},{"size":837,"mtime":1644397047170,"results":"14","hashOfConfig":"9"},{"size":981,"mtime":1644288044899,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1o10btt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/harry/sei/projects/trainslator-1/src/index.js",[],["33","34"],"/home/harry/sei/projects/trainslator-1/src/App.js",[],"/home/harry/sei/projects/trainslator-1/src/TextBox.js",[],"/home/harry/sei/projects/trainslator-1/src/SpeechToText.js",["35"],"import './SpeechToText.css'\nimport { getTokenOrRefresh } from './token_util';\nimport { ResultReason } from 'microsoft-cognitiveservices-speech-sdk';\nconst speechsdk = require('microsoft-cognitiveservices-speech-sdk')\n\n\n\nexport default function SpeechToText({ displayText, setDisplayText, currentWord, setCurrentWord}) {\n    // async function - function will now complete everything simultaneously, HOWEVER one of the benefits of this is the await.\n    async function speechToTalk() {\n        // await - waits for a promise - if the certain promise is fulfilled, assign to tokenObject, and continue with the async function. \n        // Meaning the function after this await can proceed ONCE the promise return by getTokenOrRefresh has been fulfilled.\n        // tokenObject - checks your key BY server side index.js and creates a json for src/token_util.js to obtain that object\n        const tokenObject = await getTokenOrRefresh();\n        const speechConfig = speechsdk.SpeechConfig.fromAuthorizationToken(tokenObject.authToken, tokenObject.region);\n        speechConfig.speechRecognitionLanguage = 'en-US';\n        const audioConfig = speechsdk.AudioConfig.fromDefaultMicrophoneInput();\n        const recognizer = new speechsdk.SpeechRecognizer(speechConfig, audioConfig);\n\n        recognizer.recognizeOnceAsync(result => {\n\n            if (result.reason === ResultReason.RecognizedSpeech) {\n                setCurrentWord(result.privText)\n                console.log(currentWord)\n                // TextToText(newarr[0])\n            } else {\n                let newarr = [...displayText, \"'ERROR: Speech was cancelled or could not be recognized. Ensure your microphone is working properly.'\"]\n                // change button to vibrate on error \n            }\n        });\n    }\n\n    return (\n        <div className='footer-element'>\n            <button className=\"mic-image\" onClick={() => speechToTalk()}>click</button>\n        </div>\n    )\n}","/home/harry/sei/projects/trainslator-1/src/MessageHistory.js",[],"/home/harry/sei/projects/trainslator-1/src/TextToText.js",[],"/home/harry/sei/projects/trainslator-1/src/token_util.js",[],["36","37"],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":27,"column":21,"nodeType":"44","messageId":"45","endLine":27,"endColumn":27},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'newarr' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]