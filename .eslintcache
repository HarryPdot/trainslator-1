[{"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/index.js":"1","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/App.js":"2","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/TextBox.js":"3","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/SpeechToText.js":"4","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/MessageHistory.js":"5","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/TextToText.js":"6","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/token_util.js":"7","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/Select.js":"8","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/symbolObj.js":"9","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/TextToSpeech.js":"10"},{"size":196,"mtime":1644452524633,"results":"11","hashOfConfig":"12"},{"size":1261,"mtime":1644464462845,"results":"13","hashOfConfig":"12"},{"size":1466,"mtime":1644464291515,"results":"14","hashOfConfig":"12"},{"size":1895,"mtime":1644452524613,"results":"15","hashOfConfig":"12"},{"size":900,"mtime":1644452524598,"results":"16","hashOfConfig":"12"},{"size":773,"mtime":1644463877695,"results":"17","hashOfConfig":"12"},{"size":981,"mtime":1644452524640,"results":"18","hashOfConfig":"12"},{"size":1039,"mtime":1644464193385,"results":"19","hashOfConfig":"12"},{"size":647,"mtime":1644464144891,"results":"20","hashOfConfig":"12"},{"size":1135,"mtime":1644464305000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1y5gqzi",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/index.js",[],["46","47"],"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/App.js",[],"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/TextBox.js",["48"],"import './TextBox.css'\nimport TextToText from './TextToText.js'\nimport symbolObj from \"./symbolObj\"\nimport { useEffect } from 'react'\nimport TextToSpeech from './TextToSpeech.js'\n\nexport default function TextBox({ displayText, setDisplayText, translated, setTranslated, currentWord, setCurrentWord, targetLanguage, setTargetLanguage }) {\n\n    console.log(displayText)\n    console.log(translated)\n\n    function handleChange(event) {\n        var newWord = event.target.value\n        setCurrentWord(newWord)\n    }\n    function handleClick() {\n        console.log('adding input')\n        var newarr = [...displayText, currentWord]\n        setDisplayText(newarr)\n        var newLanguage = targetLanguage\n        if (newLanguage.includes(\"普通话\") || newLanguage.includes(\"國語\")) {\n            newLanguage = \"Google Chinese\"\n        } else if (newLanguage.includes(\"粤語\")) {\n            newLanguage = \"Google Cantonese\"\n        }\n        var languageSym = symbolObj[newLanguage]\n        TextToText(currentWord, languageSym).then(res => setTranslated([...translated, res]))\n    }\n\n    useEffect(() => {\n        TextToSpeech(translated[translated.length - 1], targetLanguage)\n        console.log(\"it is here\", translated)\n    }, [translated])\n\n    return (\n        <div className='textbox-element'>\n            <textarea value={currentWord} onChange={handleChange}>\n            </textarea>\n            <button onClick={handleClick}></button>\n        </div >\n    )\n}","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/SpeechToText.js",["49"],"import './SpeechToText.css'\nimport { getTokenOrRefresh } from './token_util';\nimport { ResultReason } from 'microsoft-cognitiveservices-speech-sdk';\nconst speechsdk = require('microsoft-cognitiveservices-speech-sdk')\n\n\n\nexport default function SpeechToText({ displayText, setDisplayText, currentWord, setCurrentWord}) {\n    // async function - function will now complete everything simultaneously, HOWEVER one of the benefits of this is the await.\n    async function speechToTalk() {\n        // await - waits for a promise - if the certain promise is fulfilled, assign to tokenObject, and continue with the async function. \n        // Meaning the function after this await can proceed ONCE the promise return by getTokenOrRefresh has been fulfilled.\n        // tokenObject - checks your key BY server side index.js and creates a json for src/token_util.js to obtain that object\n        const tokenObject = await getTokenOrRefresh();\n        const speechConfig = speechsdk.SpeechConfig.fromAuthorizationToken(tokenObject.authToken, tokenObject.region);\n        speechConfig.speechRecognitionLanguage = 'en-US';\n        const audioConfig = speechsdk.AudioConfig.fromDefaultMicrophoneInput();\n        const recognizer = new speechsdk.SpeechRecognizer(speechConfig, audioConfig);\n\n        recognizer.recognizeOnceAsync(result => {\n\n            if (result.reason === ResultReason.RecognizedSpeech) {\n                setCurrentWord(result.privText)\n                console.log(currentWord)\n                // TextToText(newarr[0])\n            } else {\n                let newarr = [...displayText, \"'ERROR: Speech was cancelled or could not be recognized. Ensure your microphone is working properly.'\"]\n\n            }\n        });\n    }\n\n    return (\n        <div className='footer-element'>\n            <button className=\"mic-image\" onClick={() => speechToTalk()}>click</button>\n        </div>\n    )\n}","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/MessageHistory.js",[],"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/TextToText.js",[],"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/token_util.js",[],"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/Select.js",["50"],"export default function Select({ targetLanguage, setTargetLanguage }) {\n    var synth = window.speechSynthesis.getVoices()\n    var voices = []\n    for (let i = 0; i < synth.length; i++) {\n        if (synth[i].voiceURI.slice(0, 6) === \"Google\") {\n            voices.push(synth[i])\n        }\n    }\n    voices.sort(function (a, b) {\n        const aname = a.name.toUpperCase(), bname = b.name.toUpperCase();\n        if (aname < bname) return -1;\n        else if (aname == bname) return 0;\n        else return +1;\n    });\n    function Options() {\n        var Options = []\n        for (let i = 0; i < voices.length; i++) {\n            Options.push(\n                <option key={i}>\n                    {voices[i].name}\n                </option>\n            )\n        }\n        return Options\n    }\n    function handleChange(event) {\n        var newOption = event.target.value\n        setTargetLanguage(newOption)\n    }\n    return (\n        <select value={targetLanguage} onChange={handleChange}>\n            <Options />\n        </select>\n    )\n}","/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/symbolObj.js",[],"/mnt/c/Users/brend/1sei/projects/trainslator/trainslator-1/src/TextToSpeech.js",["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":33,"column":8,"nodeType":"59","endLine":33,"endColumn":20,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":27,"column":21,"nodeType":"63","messageId":"64","endLine":27,"endColumn":27},{"ruleId":"65","severity":1,"message":"66","line":12,"column":24,"nodeType":"67","messageId":"68","endLine":12,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":12,"column":24,"nodeType":"67","messageId":"68","endLine":12,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":26,"column":32,"nodeType":"67","messageId":"68","endLine":26,"endColumn":34},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'targetLanguage'. Either include it or remove the dependency array.","ArrayExpression",["71"],"no-unused-vars","'newarr' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"72","fix":"73"},"Update the dependencies array to be: [targetLanguage, translated]",{"range":"74","text":"75"},[1216,1228],"[targetLanguage, translated]"]